---
title: "TrafficAssig.jl"
format: gfm
---

TrafficAssig is a Julia package for...

1. Load [Transportation Networks](https://github.com/bstabler/TransportationNetworks) data or construct traffic data from data frames.
1. Traffic assignment with User Equilibrium.

## Examples

```{julia}
#| label: Simple traffic assignment
#| warning: false
using TrafficAssig

tntp = load_tntp("Anaheim")
assign_traffic(tntp)
```

```{julia}
#| label: Compare algorithms
#| eval: false
tntp = load_tntp("GoldCoast")

res_FW = assign_traffic(tntp, algorithm=FrankWolfe())
res_CFW = assign_traffic(tntp, algorithm=ConjugateFrankWolfe())
res_BFW = assign_traffic(tntp, algorithm=BiconjugateFrankWolfe())
```

```{julia}
#| label: Save Frank-Wolfe results
#| eval: false
#| echo: false
using DataFrames
using CSV

if !isdir("README_files/frank-wolfe-results")
    mkpath("README_files/frank-wolfe-results")
end

function frank_wolfe_results(res)
    traffic = res.traffic
    flow = DataFrame(
        from=traffic.from,
        to=traffic.to,
        flow=res.flow
    )

    logs = res.logs
    logs = DataFrame(
        exec_time=logs.exec_time,
        objective=logs.objective,
        relative_gap=logs.relative_gap
    )

    return flow, logs
end

flow_FW, logs_FW = frank_wolfe_results(res_FW)
flow_CFW, logs_CFW = frank_wolfe_results(res_CFW)
flow_BFW, logs_BFW = frank_wolfe_results(res_BFW)

CSV.write("README_files/frank-wolfe-results/flow_FW.csv", flow_FW)
CSV.write("README_files/frank-wolfe-results/flow_CFW.csv", flow_CFW)
CSV.write("README_files/frank-wolfe-results/flow_BFW.csv", flow_BFW)

CSV.write("README_files/frank-wolfe-results/logs_FW.csv", logs_FW)
CSV.write("README_files/frank-wolfe-results/logs_CFW.csv", logs_CFW)
CSV.write("README_files/frank-wolfe-results/logs_BFW.csv", logs_BFW)
```

```{julia}
#| label: Save a figure
#| echo: false
#| echo: false
using CSV
using DataFrames
using Plots

logs_FW = CSV.read("README_files/frank-wolfe-results/logs_FW.csv", DataFrame)
logs_CFW = CSV.read("README_files/frank-wolfe-results/logs_CFW.csv", DataFrame)
logs_BFW = CSV.read("README_files/frank-wolfe-results/logs_BFW.csv", DataFrame)
plt = plot(
    1:nrow(logs_FW), logs_FW.relative_gap, 
    yaxis=:log,
    xlabel="Iteration",
    # xlabel="Execution Time [sec]",
    ylabel="Relative Gap",
    label="Frank-Wolfe"
)
plot!(
    1:nrow(logs_CFW), logs_CFW.relative_gap, 
    label="Conjugate Frank-Wolfe"
)
plot!(
    1:nrow(logs_BFW), logs_BFW.relative_gap, 
    label="Biconjugate Frank-Wolfe"
)
```

<!-- ## Comparisons -->